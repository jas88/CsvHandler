using System;
using System.Collections.Generic;

namespace CsvHandler;

/// <summary>
/// Provides deserialization logic for a specific type.
/// Implementations are generated by the source generator or created via reflection.
/// </summary>
/// <typeparam name="T">The type to deserialize.</typeparam>
public interface ICsvTypeHandler<T>
{
    /// <summary>
    /// Sets the header names from the CSV file.
    /// </summary>
    /// <param name="headers">The header field names.</param>
    void SetHeaders(IReadOnlyList<string> headers);

    /// <summary>
    /// Deserializes a row of CSV fields into an object.
    /// </summary>
    /// <param name="fields">The field values from the CSV row.</param>
    /// <param name="lineNumber">The current line number for error reporting.</param>
    /// <returns>The deserialized object.</returns>
    T Deserialize(IReadOnlyList<string> fields, long lineNumber);

    /// <summary>
    /// Gets the expected field count based on the type definition.
    /// </summary>
    int ExpectedFieldCount { get; }
}
